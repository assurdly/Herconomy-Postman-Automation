{"uid":"25a97f442ecc1ba2","name":"Verify Kid document","fullName":"Kiddosave/Onboarding#Verify Kid document","historyId":"a7ca5ded-e0c6-40c6-8adf-7e90fd003c59","time":{"start":1707841385323,"stop":1707841386570,"duration":1247},"descriptionHtml":"## Verify Kid Document(Authorization Required).<br><br>Fields required.<br><br>- kid_account_id(Required): The ID of the kid account the document is tied to.<br>    <br>- document_type: The type of the verification document. choices for this field (passport, national_id, birth_certificate)<br>    <br>- id_unique_number(Required): Identification number. For NIN- the identification number is Vnin(Virtual NIN), for Passport - the identification Number, for the birth certificate the base64 for the birth certificate pdf.","status":"failed","statusMessage":"Status code is 200, Status code name has string, Success message is returned","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"descriptionHtml":"## Verify Kid Document(Authorization Required).<br><br>Fields required.<br><br>- kid_account_id(Required): The ID of the kid account the document is tied to.<br>    <br>- document_type: The type of the verification document. choices for this field (passport, national_id, birth_certificate)<br>    <br>- id_unique_number(Required): Identification number. For NIN- the identification number is Vnin(Virtual NIN), for Passport - the identification Number, for the birth certificate the base64 for the birth certificate pdf.","status":"failed","statusMessage":"Status code is 200, Status code name has string, Success message is returned","steps":[{"name":"Status code is 200","time":{"start":1707841386565,"stop":1707841386566,"duration":1},"status":"failed","statusMessage":"expected response to have status code 200 but got 400","statusTrace":"Error: expected response to have status code 200 but got 400\n    at eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:6:25)\n    at e.test (evalmachine.<anonymous>:66:10289)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:5:4)\n    at u.exec (evalmachine.<anonymous>:66:1816851)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8141)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Status code name has string","time":{"start":1707841386566,"stop":1707841386566,"duration":0},"status":"failed","statusMessage":"expected response to have status reason 'OK' but got 'Bad Request'","statusTrace":"Error: expected response to have status reason 'OK' but got 'Bad Request'\n    at eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:9:25)\n    at e.test (evalmachine.<anonymous>:66:10289)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:8:4)\n    at u.exec (evalmachine.<anonymous>:66:1816851)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8141)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Success message is returned","time":{"start":1707841386567,"stop":1707841386567,"duration":0},"status":"failed","statusMessage":"expected [ Array(1) ] to deeply equal 'Account successfully verified'","statusTrace":"Error: expected [ Array(1) ] to deeply equal 'Account successfully verified'\n    at eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:12:35)\n    at e.test (evalmachine.<anonymous>:66:10289)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:11:4)\n    at u.exec (evalmachine.<anonymous>:66:1816851)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8141)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"4c4a4cdc37ace172","name":"TestScript","source":"4c4a4cdc37ace172.txt","type":"text/plain","size":353},{"uid":"2b710556a0029e64","name":"ConsoleLogs","source":"2b710556a0029e64.txt","type":"text/plain","size":107},{"uid":"ea3e19623c96654b","name":"Request Headers","source":"ea3e19623c96654b.json","type":"application/json","size":773},{"uid":"5a40d1176362de8d","name":"Request Body","source":"5a40d1176362de8d.txt","type":"text/plain","size":58},{"uid":"7e58df8531f7c953","name":"Response Headers","source":"7e58df8531f7c953.json","type":"application/json","size":400},{"uid":"4d1c3dd6ce22150e","name":"Response Body","source":"4d1c3dd6ce22150e.txt","type":"text/plain","size":59}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":6,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"parentSuite","value":"Kiddosave"},{"name":"suite","value":"Onboarding"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"PUT - https://staging.herconomy.com/api/v1/kiddosave/authentication/verify_kiddo_kyc_document/"},{"name":"Response Code","value":"400"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"25a97f442ecc1ba2.json","parameterValues":["PUT - https://staging.herconomy.com/api/v1/kiddosave/authentication/verify_kiddo_kyc_document/","400"]}